---
START:
  type: dict
  mandatory:
    _content: CONTENT
  optional:
    _game_id: _id
    _image: _text # Actually is a filename, but we don't have to pay attention to that for now
    _include: INCLUDE_DICT
    _injections: BLOCK_INJECTIONS_LIST
    _listeners: LISTENERS
    _meta: META_DICT
    _shown: SHOWN_LIST
    _vars: VARS
  other: BLOCK
INCLUDE_DICT:
  type: dict
  other: _text # Actually is a filename, but we don't have to pay attention to that for now
BLOCK_INJECTIONS_LIST:
  type: list
  elements: BLOCK_INJECTION
BLOCK_INJECTION:
  type: union_with_keys
  contexts:
    before: BLOCK_INJECTION_BEFORE
BLOCK_INJECTION_BEFORE:
  type: dict
  mandatory:
    before: _addr
LISTENERS:
  type: list
  elements: LISTENER
LISTENER:
  type: union_with_keys
  contexts:
    on_receive: ON_RECEIVE_LISTENER
ON_RECEIVE_LISTENER:
  type: dict
  mandatory:
    on_receive: _id
    handler: CONTENT
META_DICT:
  type: dict
  optional:
    dont_save_print: _null
    no_addr_eval: _null
    no_parse_eval: _null
SHOWN_LIST:
  type: list
  elements: SHOWN_VAR
SHOWN_VAR:
  type: union_with_types
  str: _var_id
  dict: SHOWN_GROUP
SHOWN_GROUP:
  type: dict
  other: SHOWN_LIST
VARS:
  type: list
  elements: VAR
VAR: # Has special built-in checking
  type: dict
  optional:
    _global: _null
    _locale: VAR_LOCALE
    _type: _var_type
  other: _complex_value
VAR_LOCALE:
  type: union_with_types
  str: _text
  dict: VAR_LOCALE_DICT
VAR_LOCALE_DICT:
  type: dict
  mandatory:
    default: _text
  optional:
    singular: _text
    plural: _text
BLOCK:
  type: union_with_types
  dict: DICT_BLOCK
  list: LIST_BLOCK
DICT_BLOCK: # Has special built-in checking
  type: dict
  optional:
    _content: CONTENT
    _image: _text # Actually is a filename, but we don't have to pay attention to that for now
    _include: INCLUDE_DICT
    _listeners: LISTENERS
    _meta: META_DICT
    _vars: VARS
  other: BLOCK
LIST_BLOCK:
  type: list
  elements: INSTR
CONTENT:
  type: list
  elements: INSTR
INSTR:
  type: union_with_types
  str: _text
  dict: DICT_INSTR
DICT_INSTR:
  type: union_with_keys
  contexts:
    back: BACK
    call: CALL
    choice: CHOICE
    command: COMMAND
    descriptive: DESCRIPTIVE
    error: ERROR
    flag: FLAG
    flavor: FLAVOR
    gosub: GOSUB
    goto: GOTO
    if: IF
    inject: INJECT
    insert: INSERT
    modify: MODIFY
    move: MOVE
    once: ONCE
    pass: PASS
    pop_queue: POP_QUEUE
    print: PRINT
    print_table: PRINT_TABLE
    print_var: PRINT_VAR
    random: RANDOM
    return: RETURN
    run: RUN
    seed: SEED
    send: SEND
    separator: SEPARATOR
    set: SET
    spill: SPILL
    stop: STOP
    storypoint: STORYPOINT
    sub: SUB
    subreturn: SUBRETURN
    switch: SWITCH
    tag: TAG
    unflag: UNFLAG
BACK:
  type: dict
  mandatory:
    back: _null
CALL:
  type: dict
  mandatory:
    call: _addr
CHOICE:
  type: dict
  mandatory:
    choice: _text # Custom checking
  optional:
    action: _null
    selectable_once: _null
    text: _text
    args: CHOICE_ARGS
    enforce: CONDITION
    alt_effects: EFFECTS_SPEC
    require: _requirement_specification
    cost: _requirement_specification
    shown: _requirement_specification
    effects: EFFECTS_SPEC
  priority:
    - args
CHOICE_ARGS:
  type: list
  elements: CHOICE_ARG
CHOICE_ARG:
  type: union_with_keys
  contexts:
    selection: CHOICE_ARGS_SELECTION
CHOICE_ARGS_SELECTION:
  type: dict
  mandatory:
    selection: _null
    options: CHOICE_ARGS_SELECTION_OPTIONS
CHOICE_ARGS_SELECTION_OPTIONS:
  type: list
  elements: _id
EFFECTS_SPEC:
  type: union_with_types
  str: _addr
  list: CONTENT
COMMAND:
  type: dict
  mandatory:
    command: _text
DESCRIPTIVE:
  type: dict
  mandatory:
    descriptive: DESCRIPTION
  optional:
    moderate: DESCRIPTION
    minimal: DESCRIPTION
DESCRIPTION:
  type: union_with_types
  none: _null
  str: _text
ERROR:
  type: dict
  mandatory:
    error: _null
FLAG:
  type: dict
  mandatory:
    flag: _id
FLAVOR:
  type: dict
  mandatory:
    flavor: _text
GOSUB:
  type: dict
  mandatory:
    gosub: _addr
GOTO:
  type: dict
  mandatory:
    goto: _addr
IF:
  type: dict
  mandatory:
    if: CONDITION
    then: CONTENT
  optional:
    else: CONTENT
CONDITION:
  type: union_with_types
  str: _expr
  dict: DICT_CONDITION
  list: CONDITION_AND
CONDITION_AND:
  type: list
  elements: CONDITION
CONDITION_OR:
  type: list
  elements: CONDITION
DICT_CONDITION:
  type: union_with_keys
  contexts:
    has: CONDITION_HAS
    or: DICT_CONDITION_OR
DICT_CONDITION_OR:
  type: dict
  mandatory:
    or: CONDITION_OR
CONDITION_HAS:
  type: dict
  mandatory:
    has: _id
    in: _var_id
  optional:
    amount: _num_expr
INJECT:
  type: dict
  mandatory:
    inject: _addr
  optional:
    into_choices: INJECT_INTO_CHOICES_SPEC
    position: _inject_position
INJECT_INTO_CHOICES_SPEC:
  type: union_with_types
  str: _text
  dict: INJECT_INTO_CHOICES_DICT
INJECT_INTO_CHOICES_DICT:
  type: dict
  optional:
    except: _text
INSERT:
  type: dict
  mandatory:
    insert: _id
    into: _var_id
    amount: _expr
MODIFY:
  type: dict
  mandatory:
    modify: _var_id
  optional:
    add: _expr
MOVE:
  type: dict
  mandatory:
    move: _addr
    to: _addr
ONCE:
  type: dict
  mandatory:
    once: ONCE_SPEC
ONCE_SPEC:
  type: union_with_types
  str: _text
  list: CONTENT
PASS:
  type: dict
  mandatory:
    pass: _null
POP_QUEUE:
  type: dict
  mandatory:
    pop_queue: _null
PRINT:
  type: dict
  mandatory:
    print: _text
  optional:
    style: _text
PRINT_TABLE:
  type: dict
  mandatory:
    print_table: _table_id
PRINT_VAR:
  type: dict
  mandatory:
    print_var: _text
RANDOM:
  type: dict
  mandatory:
    random: RANDOM_EVENTS_SPEC
RANDOM_EVENTS_SPEC:
  type: union_with_types
  str: _addr_list
  dict: RANDOM_EVENT_DICT
RANDOM_EVENT_DICT:
  type: dict
  other: RANDOM_EVENT
RANDOM_EVENT:
  type: union_with_types
  none: _null
  list: CONTENT
RETURN:
  type: dict
  mandatory:
    return: _null
RUN:
  type: dict
  mandatory:
    run: _var_id
SEED:
  type: dict
  mandatory:
    seed: _id
SEND:
  type: dict
  mandatory:
    send: _id
SEPARATOR:
  type: dict
  mandatory:
    separator: _null
SET:
  type: dict
  mandatory:
    set: _set_expr
  optional:
    show: _null
    to: _expr
# Special handling (to make sure it is within an effects section)
SPILL:
  type: dict
  mandatory:
    spill: _null
STOP:
  type: dict
  mandatory:
    stop: _null
STORYPOINT:
  type: dict
  mandatory:
    storypoint: _story_point
SUB:
  type: dict
  mandatory:
    sub: _addr
SUBRETURN:
  type: dict
  mandatory:
    subreturn: _null
SWITCH:
  type: dict
  mandatory:
    switch: _expr
  other: CASE_SPEC
CASE_SPEC:
  type: union_with_types
  str: _addr
  list: CONTENT
TAG:
  type: dict
  mandatory:
    tag: _id
UNFLAG:
  type: dict
  mandatory:
    unflag: _id
